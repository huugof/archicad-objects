! =========================================================
! 2D – Wall-mounted square light symbol with arm and plate
! Always shows wall-mounted design regardless of hasArm setting
! IMPROVED: Always readable label with COMPLETE rotation compensation
! FIX: Now accounts for both object rotation AND model/view rotation
! FIX: Added toggle between Object ID and Custom Text
! =========================================================

_bhx = bX / 2
_bhy = bY / 2
_modelRotation = modelRotation

! Wall mounting dimensions for 2D symbol (fixed sizes)
_armLen2D = 2"        ! Fixed 2" arm length for 2D
_plateW2D = 4"        ! Fixed 4" plate width for 2D
_plateH2D = plateHeight
_plateHW2D = _plateW2D / 2
_plateHH2D = _plateH2D / 2

PEN pen2D
LINE_TYPE 1

! ---------------------------------------------------------
! Optional opaque mask inside the square (draw first)
! Use a solid fill with background color.
! frame_fill bits: j2=fill, j3=close => 2 + 4 = 6
! (no contour here; the outline is drawn below)

! ---------------------------------------------------------
! Optional opaque mask - simple filled rectangle behind the outline
IF opaque2D THEN
    FILL maskFillType
    POLY2_B 5, 2+4,        ! 2=fill, 4=close polygon
        maskFillPen, 91,  ! Use parameters for pen colors
        -_bhx, -_bhy + _fixtureY, 1,
        _bhx, -_bhy + _fixtureY, 1,
        _bhx, _bhy + _fixtureY, 1,
        -_bhx, _bhy + _fixtureY, 1,
        -_bhx, -_bhy + _fixtureY, 1
ENDIF

! ---------------------------------------------------------
! Square outline (positioned away from origin)
! With new origin at plate face, fixture is offset by yOrigin distance
_fixtureY = yOrigin  ! Distance from origin to fixture center
POLY2_B 5, 1+4, 0, 0,
    -_bhx, -_bhy + _fixtureY, 1,
    _bhx, -_bhy + _fixtureY, 1,
    _bhx, _bhy + _fixtureY, 1,
    -_bhx, _bhy + _fixtureY, 1,
    -_bhx, -_bhy + _fixtureY, 1

! ---------------------------------------------------------
! Extra symbol graphics by style
! 0 = none, 1 = X, 2 = crosshair, 3 = down arrow

IF sym2DStyle = 0 THEN
    ! nothing extra
ELSE
    IF sym2DStyle = 1 THEN
        ! Square + X (45° corner-to-corner)
        LINE2 -_bhx, -_bhy + _fixtureY, _bhx, _bhy + _fixtureY
        LINE2 _bhx, -_bhy + _fixtureY, -_bhx, _bhy + _fixtureY
    ELSE
        IF sym2DStyle = 2 THEN
            ! Square + crosshair (extend a bit beyond box)
            _ext = MIN(_bhx, _bhy) / 2
            LINE2 -_bhx - _ext, _fixtureY, _bhx + _ext, _fixtureY
            LINE2 0, -_bhy - _ext + _fixtureY, 0, _bhy + _ext + _fixtureY
        ELSE
            ! sym2DStyle = 3 : up arrow from top mid (flipped direction)
            _arrowLen = MIN(bX, bY) / 1.2    ! Increased from /2.5 to /1.8 (longer)
            _arrowHalf = MIN(bX, bY) / 3     ! Increased from /8 to /5 (wider)
            LINE2 0, _bhy + _fixtureY, 0, _bhy + _arrowLen + _fixtureY
            LINE2 0, _bhy + _arrowLen + _fixtureY, -_arrowHalf, _bhy + (_arrowLen * 0.6) + _fixtureY  ! Changed from 0.6 to 0.8 (sharper angle)
            LINE2 0, _bhy + _arrowLen + _fixtureY, _arrowHalf, _bhy + (_arrowLen * 0.6) + _fixtureY   ! Changed from 0.6 to 0.8 (sharper angle)
        ENDIF
    ENDIF
ENDIF

! ---------------------------------------------------------
! Wall mounting arm and plate (positioned with new origin)
! ---------------------------------------------------------

! Mounting arm line extending from fixture to plate (origin)
LINE2 0, -_bhy + _fixtureY, 0, 0

! Wall mounting plate as horizontal bar at origin (Y=0)
LINE2 -_plateHW2D, 0, _plateHW2D, 0

! ---------------------------------------------------------
! Movable label handle (combined editing of labelX & labelY)
HOTSPOT2 labelX, 0, 2001, labelY, 1+128
HOTSPOT2 labelX, -1, 2002, labelY, 3
HOTSPOT2 labelX, labelY, 2003, labelY, 2
HOTSPOT2 0, labelY, 2004, labelX, 1+128
HOTSPOT2 -1, labelY, 2005, labelX, 3
HOTSPOT2 labelX, labelY, 2006, labelX, 2

! ---------------------------------------------------------
! IMPROVED LABEL with rotation compensation 
! Goal: Always keep text horizontal at 0° in global view

! Get the symbol rotation (this works now)
_symbolRotation = SYMB_ROTANGLE

! Calculate total text rotation to counter both rotations
_textRotation = -(_symbolRotation + _modelRotation)

! Calculate label size
labelMM = labelSize / 2.8346

! Move to label position
ADD2 labelX, labelY

! Rotate to counter BOTH the symbol rotation AND model rotation (keep text readable)
ROT2 _textRotation

! ---------------------------------------------------------
! Draw the text - CHOOSE SOURCE BASED ON TOGGLE
DEFINE STYLE "RL_LabelStyle" "Arial", labelMM, 5, 0
SET STYLE "RL_LabelStyle"
PEN pen2D  ! Ensure text uses proper pen

! Choose label text based on labelSource parameter:
! 0 = Object ID, 1 = Custom Text
IF labelSource = 0 THEN
    _displayText = GLOB_ID    ! Alternative 1 (uncomment if ID doesn't work)
ELSE
    _displayText = labelText    ! Use custom text parameter
ENDIF

TEXT2 0, 0, _displayText

! Debug: Uncomment to see what's happening
! TEXT2 0, -0.3, STR("Source:%d", labelSource)

! Restore transformations
DEL 2  ! Remove both ADD2 and ROT2

! ---------------------------------------------------------
! Interactive dimension editing hotspots
! ---------------------------------------------------------

! Arm length editing (along arm centerline)
HOTSPOT2 0, 0, 3001, armLength, 1+128           ! Base hotspot at plate
HOTSPOT2 0, -1, 3002, armLength, 3              ! Reference hotspot
HOTSPOT2 0, _fixtureY, 3003, armLength, 2       ! Draggable hotspot at fixture

! Plate width editing (horizontal at plate)
HOTSPOT2 -_plateHW2D, 0, 3004, plateWidth, 1+128  ! Base hotspot left
HOTSPOT2 -_plateHW2D-1, 0, 3005, plateWidth, 3     ! Reference hotspot
HOTSPOT2 _plateHW2D, 0, 3006, plateWidth, 2        ! Draggable hotspot right

! Fixture width editing (horizontal at fixture)
HOTSPOT2 -_bhx, _fixtureY, 3007, bX, 1+128      ! Base hotspot left
HOTSPOT2 -_bhx-1, _fixtureY, 3008, bX, 3        ! Reference hotspot
HOTSPOT2 _bhx, _fixtureY, 3009, bX, 2           ! Draggable hotspot right

! Fixture height editing (vertical at fixture) - only if not square
IF isSquare = 0 THEN
    HOTSPOT2 0, -_bhy + _fixtureY, 3010, bY, 1+128  ! Base hotspot bottom
    HOTSPOT2 0, -_bhy-1 + _fixtureY, 3011, bY, 3    ! Reference hotspot
    HOTSPOT2 0, _bhy + _fixtureY, 3012, bY, 2        ! Draggable hotspot top
ENDIF

! ---------------------------------------------------------
! Reference snap hotspots (positioned with new origin)
HOTSPOT2 0, 0                                    ! Origin at plate face
HOTSPOT2 0, _fixtureY                           ! Fixture center
HOTSPOT2 _bhx, _bhy + _fixtureY                 ! Fixture corners
HOTSPOT2 -_bhx, _bhy + _fixtureY
HOTSPOT2 -_bhx, -_bhy + _fixtureY
HOTSPOT2 _bhx, -_bhy + _fixtureY